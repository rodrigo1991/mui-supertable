{"version":3,"file":"EnhancedTableToolbar.js","sourceRoot":"","sources":["EnhancedTableToolbar.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\nimport { memo, useState } from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport FileDownloadOutlinedIcon from '@mui/icons-material/FileDownloadOutlined';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport AddIcon from '@mui/icons-material/Add';\nimport {\n  Badge,\n  Box,\n  Grid,\n  MenuItem,\n  Popover,\n  TextField,\n  Tooltip,\n  Typography,\n  Toolbar,\n} from '@mui/material';\nimport { debounce } from 'lodash';\n// import { es as esLocale } from 'date-fns/locale';\n// import DateRangePicker, { DateRange } from '@mui/lab/DateRangePicker';\n// import AdapterDateFns from '@mui/lab/AdapterDateFns';\n// import LocalizationProvider from '@mui/lab/LocalizationProvider';\n\n// import { formatDate } from '../../../utils/helper';\n\nimport { dateFilter, numberFilter, stringFilter } from './operators';\nimport { Filter, FilterValue, HeadCell } from './types';\n\ninterface EnhancedTableToolbarProps<T> {\n  // reload?: () => void;\n  setReload?: (reload: boolean | ((prev: boolean) => boolean)) => void;\n  csvExport?: () => Promise<void> | undefined;\n  filterValue?: FilterValue;\n  setFilterValue?: (value: (prevVar: FilterValue) => FilterValue) => void;\n  headCells?: HeadCell<T>[];\n  filterCount: number;\n  setFilterCount: (value: number | ((prevVar: number) => number)) => void;\n  add?: (value: boolean | ((prevVar: boolean) => boolean)) => void;\n  title?: string;\n}\n\nconst EnhancedTableToolbar = <T,>({\n  // reload,\n  setReload,\n  csvExport,\n  filterValue,\n  setFilterValue,\n  headCells,\n  filterCount,\n  setFilterCount,\n  add,\n  title,\n}: EnhancedTableToolbarProps<T>) => {\n  console.log('rendering EnhancedTableToolbar');\n  // const isMounted = useRef(false);\n  // const date = new Date();\n  const [open, setOpen] = useState(false);\n  const [textType, setTextType] = useState('text');\n  const [operators, setOperators] = useState<Filter[]>(stringFilter);\n  // const [fechas, setFechas] = useState<DateRange<Date>>([\n  //   new Date(date.getFullYear(), date.getMonth() - 1, 1),\n  //   new Date(),\n  // ]);\n\n  const popoverId = open ? 'simple-popover' : undefined;\n  const clear = () => {\n    setOperators(stringFilter);\n    if (setFilterValue)\n      setFilterValue(prev => ({\n        columnField: 'name',\n        operatorValue: '%',\n        value: prev.value === '' ? null : '',\n      }));\n    setTextType('text');\n    setFilterCount(0);\n    setOpen(false);\n  };\n\n  const updateValue = (value: string) => {\n    if (setFilterValue)\n      setFilterValue(prevState => ({\n        ...prevState,\n        value,\n      }));\n    setFilterCount(value ? 1 : 0);\n  };\n\n  const debounceSetValue = debounce(updateValue, 500);\n\n  const handleColumnChange = (columnField: string) => {\n    if (setFilterValue)\n      setFilterValue(prevState => ({\n        ...prevState,\n        columnField,\n      }));\n\n    console.log(columnField);\n    const column = headCells?.find(headCell => headCell.id === columnField);\n    console.log(column);\n\n    if (column)\n      switch (column.type) {\n        case 'number':\n          setOperators(numberFilter);\n          setTextType('text');\n          if (setFilterValue)\n            setFilterValue(prevState => ({\n              ...prevState,\n              operatorValue: numberFilter[0].id,\n            }));\n          break;\n        case 'string':\n          setOperators(stringFilter);\n          setTextType('text');\n          if (setFilterValue)\n            setFilterValue(prevState => ({\n              ...prevState,\n              operatorValue: stringFilter[0].id,\n            }));\n          break;\n        case 'date':\n          setOperators(dateFilter);\n          setTextType('date');\n          if (setFilterValue)\n            setFilterValue(prevState => ({\n              ...prevState,\n              operatorValue: dateFilter[0].id,\n            }));\n          break;\n\n        default:\n          break;\n      }\n  };\n\n  // useEffect(() => {\n  //   document.addEventListener('keyup', e => {\n  //     if (e.code === 'KeyF') setOpen(true);\n  //   });\n  //   document.addEventListener('keyup', e => {\n  //     if (e.code === 'Escape') clear();\n  //   });\n  // }, []);\n\n  // useEffect(() => {\n  //   if (isMounted.current) {\n  //     if (fechas[0] && fechas[1]) {\n  //       const desde = `${formatDate(fechas[0])}T00:00:00`;\n  //       const hasta = `${formatDate(fechas[1])}T23:59:59`;\n  //       console.log(desde, hasta);\n  //       updateValue(\n  //         `filter[updatedAt][$gte]=${desde}&filter[updatedAt][$lte]=${hasta}`\n  //       );\n  //     }\n  //   }\n  //   isMounted.current = true;\n  // }, []);\n\n  return (\n    <>\n      <Toolbar\n        sx={{\n          pl: { sm: 2 },\n          pr: { xs: 1, sm: 1 },\n        }}\n      >\n        <Typography\n          sx={{ flex: '1 1 100%' }}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          {title && `${title}s`}\n        </Typography>\n        {add && (\n          <Tooltip title={`Crear ${title}`}>\n            <IconButton onClick={() => add(true)}>\n              <AddIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n        {csvExport && (\n          <Tooltip title=\"Exportar\">\n            <IconButton onClick={csvExport}>\n              <FileDownloadOutlinedIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n        {filterValue && setFilterValue && (\n          <Tooltip title=\"Filtros\">\n            <IconButton onClick={() => setOpen(true)}>\n              <Badge badgeContent={filterCount} color=\"primary\">\n                <FilterListIcon />\n              </Badge>\n            </IconButton>\n          </Tooltip>\n        )}\n        {setReload && (\n          <Tooltip title=\"Actualizar\">\n            {/* <IconButton onClick={reload}> */}\n            <IconButton onClick={() => setReload(prev => !prev)}>\n              <RefreshIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n      </Toolbar>\n      {open && (\n        <Popover\n          id={popoverId}\n          open={open}\n          onClose={() => setOpen(false)}\n          anchorReference=\"anchorPosition\"\n          anchorPosition={{ top: 198, left: 280 }}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'left',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'left',\n          }}\n        >\n          <Box sx={{ p: 1 }}>\n            <Grid\n              container\n              justifyContent=\"center\"\n              alignItems=\"flex-end\"\n              spacing={1}\n            >\n              <Grid item xs={1}>\n                <IconButton size=\"small\" onClick={clear}>\n                  <ClearIcon fontSize=\"small\" />\n                </IconButton>\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  id=\"standard-select-column\"\n                  select\n                  label=\"Columnas\"\n                  variant=\"standard\"\n                  value={filterValue?.columnField}\n                  fullWidth\n                  onChange={e => handleColumnChange(e.target.value)}\n                >\n                  {headCells?.map(columna => (\n                    <MenuItem key={columna.id} value={columna.id}>\n                      {columna.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </Grid>\n              {textType === 'date' ? (\n                <Grid item xs={8}>\n                  {/* <LocalizationProvider\n                  dateAdapter={AdapterDateFns}\n                  locale={esLocale}\n                >\n                  <DateRangePicker\n                    startText=\"Desde\"\n                    endText=\"Hasta\"\n                    value={fechas}\n                    onChange={newValue => setFechas(newValue)}\n                    renderInput={(startProps, endProps) => (\n                      <>\n                        <TextField variant=\"standard\" {...startProps} />\n                        <Box sx={{ mx: 2 }}> a </Box>\n                        <TextField variant=\"standard\" {...endProps} />\n                      </>\n                    )}\n                  />\n                </LocalizationProvider> */}\n                </Grid>\n              ) : (\n                <>\n                  <Grid item xs={4}>\n                    <TextField\n                      id=\"standard-select-operator\"\n                      select\n                      label=\"Operadores\"\n                      variant=\"standard\"\n                      value={filterValue?.operatorValue}\n                      fullWidth\n                      onChange={e =>\n                        setFilterValue &&\n                        setFilterValue(prevState => ({\n                          ...prevState,\n                          operatorValue: e.target.value,\n                        }))\n                      }\n                    >\n                      {operators.map(filter => (\n                        <MenuItem key={filter.id} value={filter.id}>\n                          {filter.value}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      id=\"standard-textarea\"\n                      label=\"Valor\"\n                      placeholder=\"Valor del filtro\"\n                      variant=\"standard\"\n                      // value={filterValue.value}\n                      fullWidth\n                      autoFocus\n                      onChange={e => debounceSetValue(e.target.value)}\n                    />\n                  </Grid>\n                </>\n              )}\n            </Grid>\n          </Box>\n        </Popover>\n      )}\n    </>\n  );\n};\nexport default memo(EnhancedTableToolbar) as typeof EnhancedTableToolbar;\n"]}