{"version":3,"file":"helper.js","sourceRoot":"","sources":["helper.ts"],"names":[],"mappings":"AAAA,MAAM,CAAC,IAAM,cAAc,GAAG,UAAC,GAAoB;IACjD,OAAA,WAAI,QAAQ,CAAC,OAAO,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC;SAC7D,OAAO,CAAC,CAAC,CAAC,CAAC,4BAA4B;SACvC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,yCAAyC;SAC3D,OAAO,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAE;AAH9C,CAG8C,CAAC;AAEjD,MAAM,CAAC,IAAM,WAAW,GAAG,UAAC,KAAa;IACvC,OAAA,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,kBAAkB,CAAC,OAAO,EAAE;QAC1C,GAAG,EAAE,SAAS;QACd,KAAK,EAAE,SAAS;QAChB,IAAI,EAAE,SAAS;QACf,IAAI,EAAE,SAAS;QACf,MAAM,EAAE,SAAS;QACjB,MAAM,EAAE,SAAS;KAClB,CAAC;AAPF,CAOE,CAAC","sourcesContent":["export const currencyFormat = (num: string | number) =>\n  `$${parseInt(typeof num === \"number\" ? num.toString() : num, 10)\n    .toFixed(0) // always two decimal digits\n    .replace(\".\", \",\") // replace decimal point character with ,\n    .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1.\")}`;\n\nexport const formatFecha = (fecha: string) =>\n  new Date(fecha).toLocaleDateString(\"es-CL\", {\n    day: \"2-digit\",\n    month: \"2-digit\",\n    year: \"numeric\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n  });\n"]}